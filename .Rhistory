bin_cumulative <- function(trials, prob){
dis = bin_distribution(trials, prob)
cumulative <- c(rep(NA,trials))
cumulative[1] = dis[1,2]
for (i in 0:(trials - 1)) {
cumulative[i+2] = cumulative[i+1] + dis[i+2,2]
}
df1 = data.frame(dis, cumulative)
class(df1) = c("bindcum","data.frame")
return(df1)
}
# 1.6 Function bin_cumulative()
#' @title bin_cumulative
#' @description  a dataframe which list the success, the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a data frame with sucesses in the first column, probability in the second column, cummulative in the third
#' @export
#' @examples
#' bin_cumulative(trials = 5, prob = 0.5)
bin_cumulative <- function(trials, prob){
dis = bin_distribution(trials, prob)
cumulative <- c(rep(NA,trials))
cumulative[1] = dis[1,2]
for (i in 0:(trials - 1)) {
cumulative[i+2] = cumulative[i+1] + dis[i+2,2]
}
df1 = data.frame(dis, cumulative)
class(df1) = c("bindcum","data.frame")
return(df1)
}
#' @export
plot.bincum <- function(x, ..){
p = plot(x = x$success, y = x$cumulative, type = "b")
return(p)
}
plot(bin_cumulative(5,0.5))
plot(bin_cumulative(5,0.5))
plot(bin_cumulative(5,0.2))
?plot
bin_cumulative(5,0.5)
#' @export
plot.bincum <- function(x, ..){
p = plot(x$dis$success, y = x$cumulative, type = "b")
return(p)
}
# 1.6 Function bin_cumulative()
#' @title bin_cumulative
#' @description  a dataframe which list the success, the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a data frame with sucesses in the first column, probability in the second column, cummulative in the third
#' @export
#' @examples
#' bin_cumulative(trials = 5, prob = 0.5)
bin_cumulative <- function(trials, prob){
dis = bin_distribution(trials, prob)
cumulative <- c(rep(NA,trials))
cumulative[1] = dis[1,2]
for (i in 0:(trials - 1)) {
cumulative[i+2] = cumulative[i+1] + dis[i+2,2]
}
df1 = data.frame(dis, cumulative)
class(df1) = c("bindcum","data.frame")
return(df1)
}
#' @export
plot.bincum <- function(x, ..){
p = plot(x$dis$success, y = x$cumulative, type = "b")
return(p)
}
plot(bin_cumulative(5,0.2))
# 1.6 Function bin_cumulative()
#' @title bin_cumulative
#' @description  a dataframe which list the success, the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a data frame with sucesses in the first column, probability in the second column, cummulative in the third
#' @export
#' @examples
#' bin_cumulative(trials = 5, prob = 0.5)
bin_cumulative <- function(trials, prob){
dis = bin_distribution(trials, prob)
cumulative <- c(rep(NA,trials))
cumulative[1] = dis[1,2]
for (i in 0:(trials - 1)) {
cumulative[i+2] = cumulative[i+1] + dis[i+2,2]
}
df1 = data.frame(dis$success, cumulative)
class(df1) = c("bindcum","data.frame")
return(df1)
}
#' @export
plot.bincum <- function(x, ..){
p = plot(x$success, y = x$cumulative, type = "b")
return(p)
}
plot(bin_cumulative(5,0.2))
?plot
# 1.6 Function bin_cumulative()
#' @title bin_cumulative
#' @description  a dataframe which list the success, the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a data frame with sucesses in the first column, probability in the second column, cummulative in the third
#' @export
#' @examples
#' bin_cumulative(trials = 5, prob = 0.5)
bin_cumulative <- function(trials, prob){
dis = bin_distribution(trials, prob)
cumulative <- c(rep(NA,trials))
cumulative[1] = dis[1,2]
for (i in 0:(trials - 1)) {
cumulative[i+2] = cumulative[i+1] + dis[i+2,2]
}
df1 = data.frame(dis$success, cumulative)
class(df1) = c("bindcum","data.frame")
return(df1)
}
#' @export
plot.bincum <- function(x, ..){
p = plot(x$success, y = x$cumulative, type = "p")+plot(x$success, y = x$cumulative, type = "l")
return(p)
}
plot(bin_cumulative(5,0.2))
#' @export
plot.bincum <- function(x, ..){
p = plot(x$success, y = x$cumulative, type = "p")
return(p)
}
# 1.6 Function bin_cumulative()
#' @title bin_cumulative
#' @description  a dataframe which list the success, the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a data frame with sucesses in the first column, probability in the second column, cummulative in the third
#' @export
#' @examples
#' bin_cumulative(trials = 5, prob = 0.5)
bin_cumulative <- function(trials, prob){
dis = bin_distribution(trials, prob)
cumulative <- c(rep(NA,trials))
cumulative[1] = dis[1,2]
for (i in 0:(trials - 1)) {
cumulative[i+2] = cumulative[i+1] + dis[i+2,2]
}
df1 = data.frame(dis$success, cumulative)
class(df1) = c("bindcum","data.frame")
return(df1)
}
#' @export
plot.bincum <- function(x, ..){
p = plot(x$success, y = x$cumulative, type = "b")
return(p)
}
dis = bin_distribution(trials, prob)
# 1.6 Function bin_cumulative()
#' @title bin_cumulative
#' @description  a dataframe which list the success, the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a data frame with sucesses in the first column, probability in the second column, cummulative in the third
#' @export
#' @examples
#' bin_cumulative(trials = 5, prob = 0.5)
bin_cumulative <- function(trials, prob){
dis = bin_distribution(trials, prob)
cumulative <- c(rep(NA,trials))
cumulative[1] = dis[1,2]
for (i in 0:(trials - 1)) {
cumulative[i+2] = cumulative[i+1] + dis[i+2,2]
}
df1 = data.frame(dis$success, cumulative)
class(df1) = c("bincum","data.frame")
return(df1)
}
#' @export
plot.bincum <- function(x, ..){
p = plot(x$success, y = x$cumulative, type = "l")
return(p)
}
plot(bin_cumulative(5,0.2))
# 1.6 Function bin_cumulative()
#' @title bin_cumulative
#' @description  a dataframe which list the success, the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a data frame with sucesses in the first column, probability in the second column, cummulative in the third
#' @export
#' @examples
#' bin_cumulative(trials = 5, prob = 0.5)
bin_cumulative <- function(trials, prob){
dis = bin_distribution(trials, prob)
cumulative <- c(rep(NA,trials))
cumulative[1] = dis[1,2]
for (i in 0:(trials - 1)) {
cumulative[i+2] = cumulative[i+1] + dis[i+2,2]
}
df1 = data.frame(dis, cumulative)
class(df1) = c("bincum","data.frame")
return(df1)
}
# 1.6 Function bin_cumulative()
#' @title bin_cumulative
#' @description  a dataframe which list the success, the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a data frame with sucesses in the first column, probability in the second column, cummulative in the third
#' @export
#' @examples
#' bin_cumulative(trials = 5, prob = 0.5)
bin_cumulative <- function(trials, prob){
dis = bin_distribution(trials, prob)
cumulative <- c(rep(NA,trials))
cumulative[1] = dis[1,2]
for (i in 0:(trials - 1)) {
cumulative[i+2] = cumulative[i+1] + dis[i+2,2]
}
df1 = data.frame(dis, cumulative)
class(df1) = c("bincum","data.frame")
return(df1)
}
#' @export
plot.bincum <- function(x, ..){
p = plot(x = x$success, y = x$cumulative, type = "l")
return(p)
}
plot(bin_cumulative(5,0.2))
# 1.6 Function bin_cumulative()
#' @title bin_cumulative
#' @description  a dataframe which list the success, the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a data frame with sucesses in the first column, probability in the second column, cummulative in the third
#' @export
#' @examples
#' bin_cumulative(trials = 5, prob = 0.5)
bin_cumulative <- function(trials, prob){
dis = bin_distribution(trials, prob)
cumulative <- c(rep(NA,trials))
cumulative[1] = dis[1,2]
for (i in 0:(trials - 1)) {
cumulative[i+2] = cumulative[i+1] + dis[i+2,2]
}
df1 = data.frame(dis, cumulative)
class(df1) = c("bincum","data.frame")
return(df1)
}
#' @export
plot.bincum <- function(x, ..){
p = plot(x = x$success, y = x$cumulative, type = "b")
return(p)
}
plot(bin_cumulative(5,0.2))
bin_distribution(trials = 5, prob = 0.5)
plot(bin_distribution(trials = 5, prob = 0.5))
bin_cumulative(trials = 5, prob = 0.5)
plot(bin_cumulative(trials = 5, prob = 0.5))
#1.7  Function bin_variable()
#' @title bin_variable
#' @description  a list which list the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a list with trials and probability
#' @export
#' @examples
#' bin_variable(trials = 10, p = 0.3)
bin_variable <- function(trials, prob){
l = list(trials = trials, prob = prob)
class(l) = c("binvar", "list")
return(l)
}
#' @export
print.binvar <- function(x, ..){
cat('object "Binomial variable"\n\n')
cat('"Paramaters"\n\n')
cat(sprintf("- number of trials: ", x$trials), "\n")
cat(sprintf("- prob of success: ", x$prob), "\n")
invisible(x)
}
#' @export
summary.binvar <- function(x,..){
mean = aux_mean(x$trials, x$prob)
variance = aux_variance(x$trials, x$prob)
mode = aux_mode(x$trials, x$prob)
skewness = aux_skewness(x$trials, x$prob)
kurtosis = aux_kurtosis(x$trials, x$prob)
sdf = data.frame(mean, variance, mode, skewness, kurtosis)
obj <- list(sdf =sdf)
class(obj) <- c("summary.binvar","data.frame")
obj
}
#' @export
print.summary.binvar <- function(trials, prob){
cat('summary "binomial"\n\n')
print(x$sdf)
invisible(x)
}
bin1 <- bin_variable(trials = 10, prob = 0.3)
bin1
summary(bin_variable(trials = 10, p = 0.3))
#1.7  Function bin_variable()
#' @title bin_variable
#' @description  a list which list the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a list with trials and probability
#' @export
#' @examples
#' bin_variable(trials = 10, p = 0.3)
bin_variable <- function(trials, prob){
l = list(trials = trials, prob = prob)
class(l) = c("binvar", "list")
return(l)
}
bin_variable(5,0.5)
#1.7  Function bin_variable()
#' @title bin_variable
#' @description  a list which list the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a list with trials and probability
#' @export
#' @examples
#' bin_variable(trials = 10, p = 0.3)
bin_variable <- function(trials, prob){
l = list(trials = trials, prob = prob)
class(l) = c("binvar", "list")
return(l)
}
bin_variable(5,0.5)
#1.7  Function bin_variable()
#' @title bin_variable
#' @description  a list which list the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a list with trials and probability
#' @export
#' @examples
#' bin_variable(trials = 10, p = 0.3)
bin_variable <- function(trials, prob){
l = list(trials = trials, prob = prob)
class(l) = c("binvar", "list")
return(l)
}
bin_variable(trials = 5, prob = 0.5)
#1.7  Function bin_variable()
#' @title bin_variable
#' @description  a list which list the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a list with trials and probability
#' @export
#' @examples
#' bin_variable(trials = 10, p = 0.3)
bin_variable <- function(trials, prob){
l = list(trials = trials, prob = prob)
class(l) = c("binvar", "list")
return(l)
}
#' @export
print.binvar <- function(x, ..){
cat('object "Binomial variable"\n\n')
cat('"Paramaters"\n\n')
cat(sprintf("- number of trials: ", x$trials), "\n")
cat(sprintf("- prob of success: ", x$prob), "\n")
invisible(x)
}
bin_variable(trials = 10, p = 0.3)
#1.7  Function bin_variable()
#' @title bin_variable
#' @description  a list which list the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a list with trials and probability
#' @export
#' @examples
#' bin_variable(trials = 10, p = 0.3)
bin_variable <- function(trials, prob){
l = list(trials = trials, prob = prob)
class(l) = c("binvar", "list")
return(l)
}
#' @export
print.binvar <- function(x, ..){
cat('object "Binomial variable"\n\n')
cat('"Paramaters"\n\n')
cat("total tosses:", x$trials, "\n")
cat("total tosses:", x$prob, "\n")
invisible(x)
}
#' @export
summary.binvar <- function(x,..){
mean = aux_mean(x$trials, x$prob)
variance = aux_variance(x$trials, x$prob)
mode = aux_mode(x$trials, x$prob)
skewness = aux_skewness(x$trials, x$prob)
kurtosis = aux_kurtosis(x$trials, x$prob)
sl = list(mean, variance, mode, skewness, kurtosis)
class(sl) <- c("summary.binvar","list")
return(sl)
}
#' @export
print.summary.binvar <- function(trials, prob){
cat('summary "binomial"\n\n')
print(x$sl)
invisible(x)
}
bin_variable(trials = 10, p = 0.3)
summary(bin_variable(trials = 10, p = 0.3))
bin1 <- bin_variable(trials = 10, prob = 0.3)
bin1
#1.7  Function bin_variable()
#' @title bin_variable
#' @description  a list which list the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a list with trials and probability
#' @export
#' @examples
#' bin_variable(trials = 10, p = 0.3)
bin_variable <- function(trials, prob){
l = list(trials = trials, prob = prob)
class(l) = c("summary.binvar","binvar", "list")
return(l)
}
#' @export
print.binvar <- function(x, ..){
cat('object "Binomial variable"\n\n')
cat('"Paramaters"\n\n')
cat("total tosses:", x$trials, "\n")
cat("total tosses:", x$prob, "\n")
invisible(x)
}
#' @export
summary.binvar <- function(x,..){
mean = aux_mean(x$trials, x$prob)
variance = aux_variance(x$trials, x$prob)
mode = aux_mode(x$trials, x$prob)
skewness = aux_skewness(x$trials, x$prob)
kurtosis = aux_kurtosis(x$trials, x$prob)
sl = list(mean, variance, mode, skewness, kurtosis)
class(sl) <- c("summary.binvar","list")
return(sl)
}
#' @export
print.summary.binvar <- function(trials, prob){
cat('summary "binomial"\n\n')
print(x$sl)
invisible(x)
}
summary(bin_variable(trials = 10, p = 0.3))
source('D:/Berkeley/STAT 133/workouts/03/binomial/R/binomial.R')
summary(bin_variable(trials = 10, p = 0.3))
source('D:/Berkeley/STAT 133/workouts/03/binomial/R/binomial.R')
summary(bin_variable(trials = 10, p = 0.3))
summary(bin_variable(trials = 10, prob = 0.3))
#1.7  Function bin_variable()
#' @title bin_variable
#' @description  a list which list the probability and the cumulative probability
#' @param trials input trials number
#' @param prob probability
#' @return a list with trials and probability
#' @export
#' @examples
#' bin_variable(trials = 10, p = 0.3)
bin_variable <- function(trials, prob){
l = list(trials = trials, prob = prob)
class(l) = c("summary.binvar","binvar", "list")
return(l)
}
#' @export
print.binvar <- function(x, ..){
cat('object "Binomial variable"\n\n')
cat('"Paramaters"\n\n')
cat("total tosses:", x$trials, "\n")
cat("total tosses:", x$prob, "\n")
invisible(x)
}
#' @export
summary.binvar <- function(x,..){
mean = aux_mean(x$trials, x$prob)
variance = aux_variance(x$trials, x$prob)
mode = aux_mode(x$trials, x$prob)
skewness = aux_skewness(x$trials, x$prob)
kurtosis = aux_kurtosis(x$trials, x$prob)
sdf = data.frame(mean, variance, mode, skewness, kurtosis)
sl = list(sdf = sdf)
class(sl) <- c("summary.binvar","list")
return(sl)
}
#' @export
print.summary.binvar <- function(x, ..){
cat('summary "binomial"\n\n')
print(x$sl)
invisible(x)
}
summary(bin_variable(trials = 10, prob = 0.3))
source('D:/Berkeley/STAT 133/workouts/03/binomial/R/binomial.R')
summary(bin_variable(trials = 10, prob = 0.3))
source('D:/Berkeley/STAT 133/workouts/03/binomial/R/binomial.R')
summary(bin_variable(trials = 10, prob = 0.3))
source('D:/Berkeley/STAT 133/workouts/03/binomial/R/binomial.R')
summary(bin_variable(trials = 10, prob = 0.3))
source('D:/Berkeley/STAT 133/workouts/03/binomial/R/binomial.R')
library(devtools)
devtools::document()          # generate documentation
devtools::check_man()         # check documentation
devtools::test()              # run tests
devtools::build_vignettes()   # build vignettes
devtools::build()             # build bundle
devtools::install()           # install package
